
/*
 * 
 */

package de.rwth.idsg.sensor.inform;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Tue Oct 08 12:40:56 CEST 2013
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "InformService", 
                  wsdlLocation = "file:/Users/sgokay/git/steve/src/main/webapp/SensorInformService.wsdl",
                  targetNamespace = "urn://de/rwth/idsg/sensor/inform/") 
public class InformService_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn://de/rwth/idsg/sensor/inform/", "InformService");
    public final static QName InformServiceSOAP12 = new QName("urn://de/rwth/idsg/sensor/inform/", "InformServiceSOAP12");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/sgokay/git/steve/src/main/webapp/SensorInformService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/sgokay/git/steve/src/main/webapp/SensorInformService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public InformService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InformService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InformService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public InformService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public InformService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public InformService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns InformService
     */
    @WebEndpoint(name = "InformServiceSOAP12")
    public InformService getInformServiceSOAP12() {
        return super.getPort(InformServiceSOAP12, InformService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InformService
     */
    @WebEndpoint(name = "InformServiceSOAP12")
    public InformService getInformServiceSOAP12(WebServiceFeature... features) {
        return super.getPort(InformServiceSOAP12, InformService.class, features);
    }

}
